/* ЭТОТ КОММЕНТАРИЙ МОЖЕТ БЫТЬ УДАЛЕН
 * Следующий шаблон используется во всех приложениях учебника. Класс Application используется в функции
 * main(). Все объектные файлы компонуются с одним и тем же main.o, в котором делается вызов start().
 * После выхода из метода start() будет вызван метод stop(). Оба метода виртуальные и по умолчанию
 * ничего не делают. Метод stop() может быть не нужен, но start() всегда должен быть переопределен.
 * Вы можете возвращать исключения в функцию main. По умолчанию они никак не обрабатываются, но
 * выводится сообщение об исключении.
 * 
 * Перед использованием шаблона ЗАМЕНИТЕ слово TEMPLATE на 19, 29, 38 и 49 строках.
 */

#include "app.h"
#include <iostream>

#include <thread>
 
using namespace Tools;

class TEMPLATE : public Application {
public:
	void start() const;
	//void stop() const;

};

//----------------------------------------------------------------

/*virtual*/
void TEMPLATE::start() const {

}

/* Используйте метод 
 * stop(), чтобы сделать некоторые действия перед удалением класса Application
 */
/*virtual*/
/*
void TEMPLATE::stop() const {

}
//*/

//----------------------------------------------------------------

/*
 * ЭТУ ФУНКЦИЮ РЕКОМЕНДУЕТСЯ НЕ ИЗМЕНЯТЬ (кроме вызова конструктора класса)
 */
Application* Tools::app_init() {
	return (Application*) new TEMPLATE();
}
